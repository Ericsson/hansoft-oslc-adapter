
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.ericsson.eif</groupId>
	<artifactId>oslc4j-hansoft</artifactId>
	<packaging>war</packaging>
	<version>1.1</version>
  <licenses>
    <license>
      <name>The BSD 2-Clause License</name>
      <url>https://opensource.org/licenses/BSD-2-Clause</url>
      <distribution>repo</distribution>
      <comments></comments>
    </license>
  </licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<repositories>
		<repository>
			<id>lyo-releases</id>
			<url>https://repo.eclipse.org/content/repositories/lyo-releases/</url>
		</repository>
	</repositories>
	<dependencies>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.lyo.oslc4j.core</groupId>
			<artifactId>oslc4j-core</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.lyo.oslc4j.core</groupId>
			<artifactId>oslc4j-wink</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.lyo.oslc4j.core</groupId>
			<artifactId>oslc4j-json4j-provider</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.lyo.oslc4j.core</groupId>
			<artifactId>oslc4j-jena-provider</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.lyo.server</groupId>
			<artifactId>oauth-webapp</artifactId>
			<version>2.0.0</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>org.eclipse.lyo.server</groupId>
			<artifactId>oauth-core</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.lyo.server</groupId>
			<artifactId>oauth-consumer-store</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.lyo.core.query</groupId>
			<artifactId>oslc-query</artifactId>
			<version>[1.1,)</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-simple</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- The Bugzilla example had dependency to this, and needed for some code 
			in Utils, so removed Bugzilla dep and added this as not so wide -->
		<dependency>
			<groupId>org.apache.ws.commons.util</groupId>
			<artifactId>ws-commons-util</artifactId>
			<version>1.0.2</version>
		</dependency>

		<!-- Setting as provided so it will not be included in the build. This 
			since it should only be loaded once by the web server, so is put in a common 
			location and needs to be included in the CLASSPATH. -->
		<dependency>
			<groupId>com.ericsson.eif.hansoft.lib</groupId>
			<artifactId>hansoft-lib</artifactId>
			<version>1.0</version>
			<scope>provided</scope> <!-- Essential to avoit multiple lib load -->
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz-jobs</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>2.7.1</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>oslc4j-hansoft-adapter</finalName>
		<plugins>

			<!-- For some reason compiler started to enforce java 1.5 format. Added 
				entry to set to Java 1.7 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<!-- Jetty 7 plugin See also: http://wiki.eclipse.org/Jetty/Feature/Jetty_Maven_Plugin -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<!-- <version>(7.0,9.0)</version> -->
				<!-- <version>7.3.0.v20110203</version> -->

				<configuration>
					<webAppConfig>
						<contextPath>/pducc</contextPath>

						<!-- Needed by Jetty when we don't provide the Hansoft jar as part 
							of the build -->
						<extraClasspath>${project.basedir}/lib/hpmsdk.jar</extraClasspath>
					</webAppConfig>

					<!-- Jetty config adds logging -->
					<jettyConfig>${project.build.directory}/classes/jetty.xml</jettyConfig>

					<!-- enable hot deploy -->
					<reload>automatic</reload>
					<scanIntervalSeconds>5</scanIntervalSeconds>
					<scanTargets>
						<scanTarget>WebContent</scanTarget>
					</scanTargets>

					<systemProperties>

						<systemProperty>
							<name>config.dir</name>
							<value>${basedir}/src/test/resources</value>
						</systemProperty>

						<systemProperty>
							<name>jetty.logs</name>
							<value>${basedir}/target</value>
						</systemProperty>
						<systemProperty>
							<name>jetty.port</name>
							<value>9090</value>
						</systemProperty>
					</systemProperties>

				</configuration>

			</plugin>
		</plugins>
	</build>
</project>
